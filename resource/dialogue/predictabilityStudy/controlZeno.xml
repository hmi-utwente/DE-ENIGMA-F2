<behaviourtemplates>

	<is name="zeno">
		{	
			"busy" : false,
			"mirroring" : false,
			"request" : "",
			"behaviour" : "",
			"prevRequest" : ""
		}
	</is>
	
	<javascript>
		<![CDATA[
			
			function createZenoBehaviour(duration, anim, animDelay, audio, audioDelay){
				if(anim !== "" && audio !== ""){
					filename = "animationAudioBehaviour";
				} else if(anim !== "" && audio === ""){
					filename = "animationBehaviour";
				} else if(anim === "" && audio !== ""){
					filename = "audioBehaviour";
				}
				
				behaviour = new Object();
				behaviour.startTime = 0;
				behaviour.duration = duration;
				behaviour.template = filename;
				behaviour.placeholders = [{"animate1":anim},{"animate1_delay":animDelay},{"speak1":audio},{"speak1_delay":audioDelay}];
				return behaviour;
			}
			
		]]>
    </javascript>

    <!-- Must always be near the top of the file, so we can ignore stuff while zeno is already busy -->
    <template id="ignoreWhileBusy" name="ignoreWhileBusy">
    	<preconditions mode="and">
    		<condition>is.zeno.busy</condition>
    		<condition>is.zeno.request !== ""</condition>
    	</preconditions>
    	<effects>
    		<assign is="is.zeno.request">""</assign>
    	</effects>
    </template>
    
    <template id="storeRequest" name="storeRequest">
    	<preconditions mode="and">
    		<condition>is.zeno.request !== ""</condition>
    		<condition>is.zeno.request !== "repeatLast"</condition>
    	</preconditions>
    	<effects>
    		<assign is="is.zeno.prevRequest">is.zeno.request</assign>
    	</effects>
    </template>
    
    <!-- REPEAT - special action request, basically just repeats the previous request -->
    <template id="repeatLast" name="repeatLast">
		<preconditions mode="and">
			<condition>is.zeno.request === "repeatLast"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.request">is.zeno.prevRequest</assign>
		</effects>
	</template>







    <!-- INTRODUCTION -->
    <template id="introduction" name="introduction">
		<preconditions mode="and">
			<condition>is.zeno.request === "introduction"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(7, "Gesture_welcome2", 2, "Hi, my name is Zeno. . . . . . . Shall we start?", 0)</assign>
		</effects>
	</template>

	<!-- GAME -->
	<template id="story1" name="story1">
		<preconditions mode="and">
			<condition>is.zeno.request === "story1"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(3, "", 0, "You stand in front of a small door.", 0)</assign>
		</effects>
	</template>

	<template id="question1" name="question1">
		<preconditions mode="and">
			<condition>is.zeno.request === "question1"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(1, "", 0, "How tall are you?", 0)</assign>
		</effects>
	</template>

	<template id="answer1" name="answer1">
		<preconditions mode="and">
			<condition>is.zeno.request === "answer1"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(3, "", 0, "You have to crouch, but you can enter through the door. . You enter into a kitchen.", 0)</assign>
		</effects>
	</template>

	<template id="story2" name="story2">
		<preconditions mode="and">
			<condition>is.zeno.request === "story2"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(3, "", 0, "There is a distinct smell in this room. . What is your favorite food?", 0)</assign>
		</effects>
	</template>

	<template id="question2" name="question2">
		<preconditions mode="and">
			<condition>is.zeno.request === "question2"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(1, "", 0, "What is your favorite food?", 0)</assign>
		</effects>
	</template>


	<template id="answer2" name="answer2">
		<preconditions mode="and">
			<condition>is.zeno.request === "answer2"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(1, "", 0, "The smell reminds you of what a pepperoni pizza smells like.", 0)</assign>
		</effects>
	</template>

	<template id="story3" name="story3">
		<preconditions mode="and">
			<condition>is.zeno.request === "story3"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(3, "", 0, "When you look around, you see a pizza lying on the table. Are you hungry?", 0)</assign>
		</effects>
	</template>


	<!-- RESPONSIVE EVENTS -->

	<template id="personEnters" name="personEnters">
		<preconditions mode="and">
			<condition>is.zeno.request === "personEnters"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(3, "Gesture_turnHead", 0, "Please go away, we are busy here. . Thank you.", 1)</assign>
		</effects>
	</template>

	<template id="personEntersResolution" name="personEntersResolution">
		<preconditions mode="and">
			<condition>is.zeno.request === "personEntersResolution"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(3, "Gesture_returnHead", 0, "Lets continue", 1)</assign>
		</effects>
	</template>

	<template id="userInattentive" name="userInattentive">
		<preconditions mode="and">
			<condition>is.zeno.request === "userInattentive"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(4, "", 0, "Please put that away. Thank you.", 1)</assign>
		</effects>
	</template>


	<!-- END -->
	<template id="announceEnd" name="announceEnd">
		<preconditions mode="and">
			<condition>is.zeno.request === "announceEnd"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(2, "", 0, "You eat the pizza lying on the table. It is a great pizza. . This is the end of the story for today. ", 0)</assign>
		</effects>
	</template>

	<template id="goodbye" name="goodbye">
		<preconditions mode="and">
			<condition>is.zeno.request === "goodbye"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(4, "Gesture_farewell", 1, "Bye bye", 0)</assign>
		</effects>
	</template>





      
	<!-- Following templates are responsible for starting behaviours, and then going back to idle when duration finishes -->
	<template id="startBehaviour" name="startBehaviour">
		<preconditions mode="and">
			<condition>is.zeno.behaviour !== ""</condition>
			<condition>is.zeno.behaviour.startTime === 0</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.busy">true</assign>
			<assign is="is.zeno.behaviour.startTime">is.behaviourplanner.time</assign>
			<assign is="is.zeno.bmlId">addBehaviourRequest(is.zeno.behaviour)</assign>
		</effects>
	</template>
	<template id="backToIdle" name="backToIdle">
		<preconditions mode="and">
			<condition>is.zeno.behaviour !== ""</condition>
			<condition><![CDATA[is.behaviourplanner.time > is.zeno.behaviour.startTime + is.zeno.behaviour.duration*1000]]></condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.busy">false</assign>
			<assign is="is.zeno.behaviour">""</assign>
		</effects>
	</template>
	
	<!-- Always near the end, to remove the current request -->
    <template id="cleanupRequest" name="cleanupRequest">
    	<preconditions mode="and">
    		<condition>is.zeno.request !== ""</condition>
    	</preconditions>
    	<effects>
    		<assign is="is.zeno.request">""</assign>
    	</effects>
    </template>
</behaviourtemplates>