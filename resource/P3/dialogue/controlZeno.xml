<behaviourtemplates>

	<is name="zeno">
		{	
			"busy" : false,
			"mirroring" : false,
			"request" : "",
			"behaviour" : "",
			"variants" : {
				"hello" : "",
				"timeForFaces" : "",
				"newGame" : "",
				"gameFinished" : "",
				"byebye" : "",
				"goodbye" : "",
				"praise" : "",
				"thankYou" : "",
				"wow" : "",
				"happyFace" : "",
				"sadFace" : "",
				"angryFace" : "",
				"scaredFace" : ""
			},
			"prevRequest" : ""
		}
	</is>
	
	<javascript>
		<![CDATA[
			
			function createZenoBehaviour(duration, anim, animDelay, audio, audioDelay){
				if(anim !== "" && audio !== ""){
					filename = "animationAudioBehaviour";
				} else if(anim !== "" && audio === ""){
					filename = "animationBehaviour";
				} else if(anim === "" && audio !== ""){
					filename = "audioBehaviour";
				}
				
				behaviour = new Object();
				behaviour.startTime = 0;
				behaviour.duration = duration;
				behaviour.template = filename;
				behaviour.placeholders = [{"animate1":anim},{"animate1_delay":animDelay},{"speak1":audio},{"speak1_delay":audioDelay}];
				return behaviour;
			}
			
			function createZenoLogLine(behaviourRequest, behaviour){
				return "Doing Zeno behaviour: ["+behaviourRequest+"] using BML template: ["+behaviour.template+"] with a total duration of: ["+behaviour.duration+"] seconds. Audio: ["+behaviour.placeholders[2].speak1+"]. Animation:["+behaviour.placeholders[0].animate1+"]";
			}
			
			function getHelloVariant(){
				return getVariant(["V1","V2","V3","V4"], is.zeno.variants.hello);
			}
			
			function getTimeForFacesVariant(){
				return getVariant(["V1","V2","V3","V4"], is.zeno.variants.timeForFaces);
			}
			
			function getNewGameVariant(){
				return getVariant(["V1","V2","V3","V4"], is.zeno.variants.newGame);
			}
			
			function getGameFinishedVariant(){
				return getVariant(["V1","V2","V3","V4"], is.zeno.variants.gameFinished);
			}
			
			function getGoodbyeVariant(){
				return getVariant(["V1","V2","V3","V4"], is.zeno.variants.goodbye);
			}
			
			function getByebyeVariant(){
				return getVariant(["V1","V2","V3"], is.zeno.variants.byebye);
			}
			
			function getPraiseVariant(){
				return getVariant(["V1","V2","V3","V4","V5"], is.zeno.variants.praise);
			}
			
			function getThankYouVariant(){
				return getVariant(["V1","V2","V3"], is.zeno.variants.thankYou);
			}
			
			function getWowVariant(){
				return getVariant(["V1","V2","V3"], is.zeno.variants.wow);
			}
			
			function getHappyFaceVariant(){
				return getVariant(["V1","V2","V3","V4"], is.zeno.variants.happyFace);
			}
			
			function getSadFaceVariant(){
				return getVariant(["V1","V2","V3","V4"], is.zeno.variants.sadFace);
			}
			
			function getAngryFaceVariant(){
				return getVariant(["V1","V2","V3","V4"], is.zeno.variants.angryFace);
			}
			
			function getScaredFaceVariant(){
				return getVariant(["V1","V2","V3","V4"], is.zeno.variants.scaredFace);
			}
			
			//generic function for retrieving a random variant from a given set, without repeating the previous variant.
			//or, in the invariant condition, always return the first variant 
			function getVariant(variants, previousVariant){
				if(is.behaviourplanner.behaviourMode === "invariant"){
					//default, no variation mode
					return variants[0];
				} else {
					//remove the variant we saw previously
					variants.splice(variants.indexOf(previousVariant), 1);
					
					return variants[Math.floor(Math.random() * variants.length)];
				}
			}
			
		]]>
    </javascript>
    
    
    <!-- Start and stop the mirroring actions -->
    <template id="startMirroring" name="startMirroring">
    	<preconditions mode="and">
			<condition>is.zeno.request === "startMirroring"</condition>
    	</preconditions>
	    <initeffects>
			<method name="init">
			  <object persistent="is.zeno.persistent.mirroringExe" class="mirroring.MirroringExeWrapper">  
			    <constructors>
			    </constructors>       
			  </object>  
			  <arguments></arguments>
			</method>
      	</initeffects>
    	<effects>
    		<assign is="is.zeno.request">""</assign>
    		<assign is="is.zeno.mirroring">true</assign>
    		
    		<method name="launchMirroringExe">
				<object class="mirroring.MirroringExeWrapper" persistent="is.zeno.persistent.mirroringExe"/>
				<arguments />
			</method>
    	</effects>
    </template>
    
    <template id="stopMirroring" name="stopMirroring">
    	<preconditions mode="and">
			<condition>is.zeno.request === "stopMirroring"</condition>
    	</preconditions>
    	<effects>
    		<assign is="is.zeno.request">""</assign>
    		<assign is="is.zeno.mirroring">false</assign>
    		
    		<method name="killMirroringExe">
				<object class="mirroring.MirroringExeWrapper" persistent="is.zeno.persistent.mirroringExe"/>
				<arguments />
			</method>
    	</effects>
    </template>
      
    <!-- Must always be near the top of the file, so we can ignore stuff while zeno is already busy -->
    <template id="ignoreWhileBusy" name="ignoreWhileBusy">
    	<preconditions mode="and">
    		<condition>is.zeno.busy</condition>
    		<condition>is.zeno.request !== ""</condition>
    	</preconditions>
    	<effects>
    		<assign is="is.zeno.request">""</assign>
    	</effects>
    </template>
    
    <template id="storeRequest" name="storeRequest">
    	<preconditions mode="and">
    		<condition>is.zeno.request !== ""</condition>
    		<condition>is.zeno.request !== "repeatLast"</condition>
    	</preconditions>
    	<effects>
    		<assign is="is.zeno.prevRequest">is.zeno.request</assign>
    	</effects>
    </template>
    
    <!-- REPEAT - special action request, basically just repeats the previous request -->
    <template id="repeatLast" name="repeatLast">
		<preconditions mode="and">
			<condition>is.zeno.request === "repeatLast"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.request">is.zeno.prevRequest</assign>
		</effects>
	</template>
	
    <!-- GREETINGS -->
    <template id="hello" name="hello">
		<preconditions mode="and">
			<condition>is.zeno.request === "hello"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.variants.hello">getHelloVariant()</assign>
			<assign is="is.zeno.behaviour">createZenoBehaviour(9, "Gesture_welcome", 4, "HiMyNameIsZeno"+is.zeno.variants.hello, 0)</assign>
		</effects>
	</template>
	
    <template id="timeForFaces" name="timeForFaces">
		<preconditions mode="and">
			<condition>is.zeno.request === "timeForFaces"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.variants.timeForFaces">getTimeForFacesVariant()</assign>
			<assign is="is.zeno.behaviour">createZenoBehaviour(3, "", 0, "TimeForFacesWithZeno"+is.zeno.variants.timeForFaces, 0)</assign>
		</effects>
	</template>
	
    <template id="attention" name="attention">
		<preconditions mode="and">
			<condition>is.zeno.request === "attention"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(4, "Gesture_attention", 0, "Gesture_attention", 1)</assign>
		</effects>
	</template>
	
    <template id="turnWaist" name="turnWaist">
		<preconditions mode="and">
			<condition>is.zeno.request === "turnWaist"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(4, "Gesture_turnWaist", 0, "", 0)</assign>
		</effects>
	</template>
    
    <template id="byebye" name="byebye">
		<preconditions mode="and">
			<condition>is.zeno.request === "byebye"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.variants.byebye">getByebyeVariant()</assign>
			<assign is="is.zeno.behaviour">createZenoBehaviour(8, "Gesture_welcome", 2, "ByeBye"+is.zeno.variants.byebye, 0)</assign>
		</effects>
	</template>
	
    <template id="goodbye" name="goodbye">
		<preconditions mode="and">
			<condition>is.zeno.request === "goodbye"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.variants.goodbye">getGoodbyeVariant()</assign>
			<assign is="is.zeno.behaviour">createZenoBehaviour(11, "Gesture_cheer", 4, "WellDoneFacesAreFinishedByeBye"+is.zeno.variants.goodbye, 0)</assign>
		</effects>
	</template>
	
    <!-- TOUCHING ZENO -->
    <template id="music" name="music">
		<preconditions mode="and">
			<condition>is.zeno.request === "music"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(15, "", 0, "nurseryDance", 0)</assign>
		</effects>
	</template>
	
    <template id="raiseArms" name="raiseArms">
		<preconditions mode="and">
			<condition>is.zeno.request === "raiseArms"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(2.5, "RaiseArms", 0, "", 0)</assign>
		</effects>
	</template>
	
    <template id="lowerArms" name="lowerArms">
		<preconditions mode="and">
			<condition>is.zeno.request === "lowerArms"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(2.5, "Emotion_neutral", 0, "", 0)</assign>
		</effects>
	</template>
	
    <!-- CHILD IS DISTRACTED -->
    <template id="distraction_noAction" name="distraction_noAction">
		<preconditions mode="and">
			<condition>is.zeno.request === "distraction_noAction"</condition>
		</preconditions>
		<effects>
			<!-- Do nothing -->
		</effects>
	</template>
	
    <template id="distraction_voice" name="distraction_voice">
		<preconditions mode="and">
			<condition>is.zeno.request === "distraction_voice"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(4, "", 0, "ListenAndLookTwice", 0)</assign>
		</effects>
	</template>
	
    <template id="distraction_movement" name="distraction_movement">
		<preconditions mode="and">
			<condition>is.zeno.request === "distraction_movement"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(5, "monkeyDance_short", 0, "", 0)</assign>
		</effects>
	</template>
	
    <template id="distraction_voiceAndMovement" name="distraction_voiceAndMovement">
		<preconditions mode="and">
			<condition>is.zeno.request === "distraction_voiceAndMovement"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(7, "monkeyDance_short", 2, "ListenAndLook", 0)</assign>
		</effects>
	</template>
    
    <!-- MIRRORING -->
    <template id="sameFace" name="sameFace">
		<preconditions mode="and">
			<condition>is.zeno.request === "sameFace"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(4, "", 0, "ICanMakeTheSameFaceAsYou", 0)</assign>
		</effects>
	</template>
	
    <!-- DancingAndFaces -->
	<template id="wp1Happy" name="wp1Happy">
		<preconditions mode="and">
			<condition>is.zeno.request === "wp1Happy"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(3, "Emotion_happiness", 0, "", 0)</assign>
		</effects>
	</template>
	
	<template id="wp1Sad" name="wp1Sad">
		<preconditions mode="and">
			<condition>is.zeno.request === "wp1Sad"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(3, "Emotion_sadness", 0, "", 0)</assign>
		</effects>
	</template>
	
	<template id="wp1Angry" name="wp1Angry">
		<preconditions mode="and">
			<condition>is.zeno.request === "wp1Angry"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(3, "Emotion_anger", 0, "", 0)</assign>
		</effects>
	</template>
	
	<template id="wp1Scared" name="wp1Scared">
		<preconditions mode="and">
			<condition>is.zeno.request === "wp1Scared"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(3, "Emotion_fear", 0, "", 0)</assign>
		</effects>
	</template>
	
    <!-- ExploreFeatures -->
	<template id="moveFaceNeutral" name="moveFaceNeutral">
		<preconditions mode="and">
			<condition>is.zeno.request === "moveFaceNeutral"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(3, "", 0, "ThisIsMyFace", 0)</assign>
		</effects>
	</template>
	
	<template id="moveEyebrows" name="moveEyebrows">
		<preconditions mode="and">
			<condition>is.zeno.request === "moveEyebrows"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(8, "moveEyebrows", 2.5, "TheseAreMyEyebrows", 0)</assign>
		</effects>
	</template>
	
	<template id="moveEyes" name="moveEyes">
		<preconditions mode="and">
			<condition>is.zeno.request === "moveEyes"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(9, "moveEyes", 2.5, "TheseAreMyEyes", 0)</assign>
		</effects>
	</template>
	
	<template id="moveMouth" name="moveMouth">
		<preconditions mode="and">
			<condition>is.zeno.request === "moveMouth"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(8, "moveMouth", 2.5, "ThisIsMyMouth", 0)</assign>
		</effects>
	</template>
	
    <!-- PromptFeatures -->
	<template id="askEyebrows" name="askEyebrows">
		<preconditions mode="and">
			<condition>is.zeno.request === "askEyebrows"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(3, "", 0, "FindEyebrows", 0)</assign>
		</effects>
	</template>
	
	<template id="askEyes" name="askEyes">
		<preconditions mode="and">
			<condition>is.zeno.request === "askEyes"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(2, "", 0, "FindEyes", 0)</assign>
		</effects>
	</template>
	
	<template id="askMouth" name="askMouth">
		<preconditions mode="and">
			<condition>is.zeno.request === "askMouth"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(2, "", 0, "FindMouth", 0)</assign>
		</effects>
	</template>
	
	<template id="answerEyebrows" name="answerEyebrows">
		<preconditions mode="and">
			<condition>is.zeno.request === "answerEyebrows"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(7, "moveEyebrows", 3.5, "WellDoneYouFoundMyEyebrows", 0)</assign>
		</effects>
	</template>
	
	<template id="answerEyes" name="answerEyes">
		<preconditions mode="and">
			<condition>is.zeno.request === "answerEyes"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(7, "moveEyes", 3.5, "WellDoneYouFoundMyEyes", 0)</assign>
		</effects>
	</template>
	
	<template id="answerMouth" name="answerMouth">
		<preconditions mode="and">
			<condition>is.zeno.request === "answerMouth"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(7, "moveMouth", 3.5, "WellDoneYouFoundMyMouth", 0)</assign>
		</effects>
	</template>
	
    <!-- STEP3.5 -->
	<template id="wellDoneYouMadeAFace" name="wellDoneYouMadeAFace">
		<preconditions mode="and">
			<condition>is.zeno.request === "wellDoneYouMadeAFace"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(3, "", 0, "WellDoneYouMadeAFace", 0)</assign>
		</effects>
	</template>
	
	<template id="mouthOnTheBottom" name="mouthOnTheBottom">
		<preconditions mode="and">
			<condition>is.zeno.request === "mouthOnTheBottom"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(6, "", 0, "MouthOnTheBottomEyesInTheMiddleEyebrowsOnTop", 0)</assign>
		</effects>
	</template>
	
	<template id="eyebrowsAreUp" name="eyebrowsAreUp">
		<preconditions mode="and">
			<condition>is.zeno.request === "eyebrowsAreUp"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(2, "", 0, "EyebrowsAreUp", 0)</assign>
		</effects>
	</template>
	
	<template id="eyebrowsAreDown" name="eyebrowsAreDown">
		<preconditions mode="and">
			<condition>is.zeno.request === "eyebrowsAreDown"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(2, "", 0, "EyebrowsAreDown", 0)</assign>
		</effects>
	</template>
	
	<template id="eyesAreOpen" name="eyesAreOpen">
		<preconditions mode="and">
			<condition>is.zeno.request === "eyesAreOpen"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(2, "", 0, "EyesAreOpen", 0)</assign>
		</effects>
	</template>
	
	<template id="eyesAreClosed" name="eyesAreClosed">
		<preconditions mode="and">
			<condition>is.zeno.request === "eyesAreClosed"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(2, "", 0, "EyesAreClosed", 0)</assign>
		</effects>
	</template>
	
	<template id="mouthIsUp" name="mouthIsUp">
		<preconditions mode="and">
			<condition>is.zeno.request === "mouthIsUp"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(2, "", 0, "MouthIsUp", 0)</assign>
		</effects>
	</template>
	
	<template id="mouthIsDown" name="mouthIsDown">
		<preconditions mode="and">
			<condition>is.zeno.request === "mouthIsDown"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(2, "", 0, "MouthIsDown", 0)</assign>
		</effects>
	</template>
	
	<template id="mouthIsOpen" name="mouthIsOpen">
		<preconditions mode="and">
			<condition>is.zeno.request === "mouthIsOpen"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(2, "", 0, "MouthIsOpen", 0)</assign>
		</effects>
	</template>
	
	<template id="mouthIsClosed" name="mouthIsClosed">
		<preconditions mode="and">
			<condition>is.zeno.request === "mouthIsClosed"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(2, "", 0, "MouthIsClosed", 0)</assign>
		</effects>
	</template>
	
	
	<!-- ExploreExpressions -->
	<!-- HAPPY -->
	<template id="moveFaceHappy" name="moveFaceHappy">
		<preconditions mode="and">
			<condition>is.zeno.request === "moveFaceHappy"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(9, "Emotion_happiness"+is.zeno.variants.happyFace, 4.5, "HappyThisIsMyHappyFace", 0)</assign>
		</effects>
	</template>
	
	<template id="moveEyebrowsHappy" name="moveEyebrowsHappy">
		<preconditions mode="and">
			<condition>is.zeno.request === "moveEyebrowsHappy"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(8, "Emotion_happiness"+is.zeno.variants.happyFace, 4.5, "HappyMyEyebrowsAreUp", 0)</assign>
		</effects>
	</template>
	
	<template id="moveEyesHappy" name="moveEyesHappy">
		<preconditions mode="and">
			<condition>is.zeno.request === "moveEyesHappy"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(8, "Emotion_happiness"+is.zeno.variants.happyFace, 4.5, "HappyMyEyesDoNotMove", 0)</assign>
		</effects>
	</template>
	
	<template id="moveMouthHappy" name="moveMouthHappy">
		<preconditions mode="and">
			<condition>is.zeno.request === "moveMouthHappy"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(9.5, "Emotion_happiness"+is.zeno.variants.happyFace, 6, "HappyMyMouthIsUpIAmSmiling", 0)</assign>
		</effects>
	</template>
	
	<!-- ANGRY -->
	<template id="moveFaceAngry" name="moveFaceAngry">
		<preconditions mode="and">
			<condition>is.zeno.request === "moveFaceAngry"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(9, "Emotion_anger"+is.zeno.variants.angryFace, 4.5, "AngryThisIsMyAngryFace", 0)</assign>
		</effects>
	</template>
	
	<template id="moveEyebrowsAngry" name="moveEyebrowsAngry">
		<preconditions mode="and">
			<condition>is.zeno.request === "moveEyebrowsAngry"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(9.5, "Emotion_anger"+is.zeno.variants.angryFace, 6, "AngryMyEyebrowsAreDownIAmFrowning", 0)</assign>
		</effects>
	</template>
	
	<template id="moveEyesAngry" name="moveEyesAngry">
		<preconditions mode="and">
			<condition>is.zeno.request === "moveEyesAngry"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(8, "Emotion_anger"+is.zeno.variants.angryFace, 4.5, "AngryMyEyesAreNarrow", 0)</assign>
		</effects>
	</template>
	
	<template id="moveMouthAngry" name="moveMouthAngry">
		<preconditions mode="and">
			<condition>is.zeno.request === "moveMouthAngry"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(8, "Emotion_anger"+is.zeno.variants.angryFace, 4.5, "AngryMyMouthIsDown", 0)</assign>
		</effects>
	</template>
	
	<!-- SAD -->
	<template id="moveFaceSad" name="moveFaceSad">
		<preconditions mode="and">
			<condition>is.zeno.request === "moveFaceSad"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(9, "Emotion_sadness"+is.zeno.variants.sadFace, 4.5, "SadThisIsMySadFace", 0)</assign>
		</effects>
	</template>
	
	<template id="moveEyebrowsSad" name="moveEyebrowsSad">
		<preconditions mode="and">
			<condition>is.zeno.request === "moveEyebrowsSad"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(8, "Emotion_sadness"+is.zeno.variants.sadFace, 4.5, "SadMyEyebrowsAreUp", 0)</assign>
		</effects>
	</template>
	
	<template id="moveEyesSad" name="moveEyesSad">
		<preconditions mode="and">
			<condition>is.zeno.request === "moveEyesSad"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(9.5, "Emotion_sadness"+is.zeno.variants.sadFace, 6, "SadMyEyesAreClosedIAmCrying", 0)</assign>
		</effects>
	</template>
	
	<template id="moveMouthSad" name="moveMouthSad">
		<preconditions mode="and">
			<condition>is.zeno.request === "moveMouthSad"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(8, "Emotion_sadness"+is.zeno.variants.sadFace, 4.5, "SadMyMouthIsDown", 0)</assign>
		</effects>
	</template>
	
	<!-- SCARED -->
	<template id="moveFaceScared" name="moveFaceScared">
		<preconditions mode="and">
			<condition>is.zeno.request === "moveFaceScared"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(9, "Emotion_fear"+is.zeno.variants.scaredFace, 4.5, "ScaredThisIsMyScaredFace", 0)</assign>
		</effects>
	</template>
	
	<template id="moveEyebrowsScared" name="moveEyebrowsScared">
		<preconditions mode="and">
			<condition>is.zeno.request === "moveEyebrowsScared"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(9, "Emotion_fear"+is.zeno.variants.scaredFace, 4.5, "ScaredMyEyebrowsAreUp", 0)</assign>
		</effects>
	</template>
	
	<template id="moveEyesScared" name="moveEyesScared">
		<preconditions mode="and">
			<condition>is.zeno.request === "moveEyesScared"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(9, "Emotion_fear"+is.zeno.variants.scaredFace, 4.5, "ScaredMyEyesAreOpen", 0)</assign>
		</effects>
	</template>
	
	<template id="moveMouthScared" name="moveMouthScared">
		<preconditions mode="and">
			<condition>is.zeno.request === "moveMouthScared"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(9, "Emotion_fear"+is.zeno.variants.scaredFace, 4.5, "ScaredMyMouthIsOpen", 0)</assign>
		</effects>
	</template>
	
	<!-- PromptExpressions -->
	<template id="findMyHappyFace" name="findMyHappyFace">
		<preconditions mode="and">
			<condition>is.zeno.request === "findMyHappyFace"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(1, "", 0, "FindHappy", 0)</assign>
		</effects>
	</template>
	
	<template id="wellDoneYouFoundMyHappyFace" name="wellDoneYouFoundMyHappyFace">
		<preconditions mode="and">
			<condition>is.zeno.request === "wellDoneYouFoundMyHappyFace"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(3, "", 0, "YouFoundMyHappyFace", 1)</assign>
		</effects>
	</template>
	
	
	<!-- SAD discriminator step -->
	<template id="findMySadFace" name="findMySadFace">
		<preconditions mode="and">
			<condition>is.zeno.request === "findMySadFace"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(1, "", 0, "FindSad", 0)</assign>
		</effects>
	</template>
	
	<template id="wellDoneYouFoundMySadFace" name="wellDoneYouFoundMySadFace">
		<preconditions mode="and">
			<condition>is.zeno.request === "wellDoneYouFoundMySadFace"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(3, "", 0, "YouFoundMySadFace", 1)</assign>
		</effects>
	</template>
	
	
	<!-- Angry discriminator step -->
	<template id="findMyAngryFace" name="findMyAngryFace">
		<preconditions mode="and">
			<condition>is.zeno.request === "findMyAngryFace"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(1, "", 0, "FindAngry", 0)</assign>
		</effects>
	</template>
	
	<template id="wellDoneYouFoundMyAngryFace" name="wellDoneYouFoundMyAngryFace">
		<preconditions mode="and">
			<condition>is.zeno.request === "wellDoneYouFoundMyAngryFace"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(3, "", 0, "YouFoundMyAngryFace", 1)</assign>
		</effects>
	</template>
	
	
	<!-- Scared discriminator step -->
	<template id="findMyScaredFace" name="findMyScaredFace">
		<preconditions mode="and">
			<condition>is.zeno.request === "findMyScaredFace"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(1, "", 0, "FindScared", 0)</assign>
		</effects>
	</template>
	
	<template id="wellDoneYouFoundMyScaredFace" name="wellDoneYouFoundMyScaredFace">
		<preconditions mode="and">
			<condition>is.zeno.request === "wellDoneYouFoundMyScaredFace"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(3, "", 0, "YouFoundMyScaredFace", 1)</assign>
		</effects>
	</template>
	
	
	<!-- COLOURED SQUISHIES -->
	<template id="findBlue" name="findBlue">
		<preconditions mode="and">
			<condition>is.zeno.request === "findBlue"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(2, "", 0, "FindTheBlueBlock", 0)</assign>
		</effects>
	</template>
	
	<template id="findGreen" name="findGreen">
		<preconditions mode="and">
			<condition>is.zeno.request === "findGreen"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(2, "", 0, "FindTheGreenBlock", 0)</assign>
		</effects>
	</template>
	
	<template id="findRed" name="findRed">
		<preconditions mode="and">
			<condition>is.zeno.request === "findRed"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(2, "", 0, "FindTheRedBlock", 0)</assign>
		</effects>
	</template>
	
	<template id="findYellow" name="findYellow">
		<preconditions mode="and">
			<condition>is.zeno.request === "findYellow"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(2, "", 0, "FindTheYellowBlock", 0)</assign>
		</effects>
	</template>
	
	<!-- FACES SQUISHIES -->
	<template id="makeAFace" name="makeAFace">
		<preconditions mode="and">
			<condition>is.zeno.request === "makeAFace"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(6, "pointRightArmInFront", 3, "MakeAFaceWithThePieces", 0)</assign>
		</effects>
	</template>
	
	<template id="foundEyebrows" name="foundEyebrows">
		<preconditions mode="and">
			<condition>is.zeno.request === "foundEyebrows"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(9, "Gesture_cheer", 3.5, "WellDoneYouFoundMyEyebrows", 0)</assign>
		</effects>
	</template>
	
	<template id="foundEyes" name="foundEyes">
		<preconditions mode="and">
			<condition>is.zeno.request === "foundEyes"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(9, "Gesture_cheer", 3.5, "WellDoneYouFoundMyEyes", 0)</assign>
		</effects>
	</template>
	
	<template id="foundMouth" name="foundMouth">
		<preconditions mode="and">
			<condition>is.zeno.request === "foundMouth"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(9, "Gesture_cheer", 3.5, "WellDoneYouFoundMyMouth", 0)</assign>
		</effects>
	</template>
	
    <!-- GENERIC -->
	<template id="reset" name="reset">
		<preconditions mode="and">
			<condition>is.zeno.request === "reset"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(1, "Emotion_neutral", 0, "", 0)</assign>
		</effects>
	</template>
	
	<template id="letsTryAgain" name="letsTryAgain">
		<preconditions mode="and">
			<condition>is.zeno.request === "letsTryAgain"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(2, "", 0, "LetsTryAgain", 0)</assign>
		</effects>
	</template>
	
	<template id="touchMyPicture" name="touchMyPicture">
		<preconditions mode="and">
			<condition>is.zeno.request === "touchMyPicture"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(7, "pointRightArmInFront", 0, "TouchMyPicture", 4)</assign>
		</effects>
	</template>
	
	<template id="gameFinished" name="gameFinished">
		<preconditions mode="and">
			<condition>is.zeno.request === "gameFinished"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.variants.gameFinished">getGameFinishedVariant()</assign>
			<assign is="is.zeno.behaviour">createZenoBehaviour(9, "Gesture_cheer", 5, "ThisGameIsFinished"+is.zeno.variants.gameFinished, 0)</assign>
		</effects>
	</template>
	
	<template id="dance" name="dance">
		<preconditions mode="and">
			<condition>is.zeno.request === "dance"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(9, "monkeyDance_short", 2, "LetsDance", 0)</assign>
		</effects>
	</template>
	
	<template id="look" name="look">
		<preconditions mode="and">
			<condition>is.zeno.request === "look"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(5, "pointRightArmInFront", 2, "Look", 0)</assign>
		</effects>
	</template>
	
	<template id="wellDone" name="wellDone">
		<preconditions mode="and">
			<condition>is.zeno.request === "wellDone"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(6.5, "Gesture_cheer", 2, "WellDone", 0)</assign>
		</effects>
	</template>
	
	<template id="ok" name="ok">
		<preconditions mode="and">
			<condition>is.zeno.request === "ok"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(2, "", 0, "Ok", 0)</assign>
		</effects>
	</template>
	
	<template id="yes" name="yes">
		<preconditions mode="and">
			<condition>is.zeno.request === "yes"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(2, "", 0, "Yes", 0)</assign>
		</effects>
	</template>
	
	<template id="no" name="no">
		<preconditions mode="and">
			<condition>is.zeno.request === "no"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.behaviour">createZenoBehaviour(2, "", 0, "No", 0)</assign>
		</effects>
	</template>
	
	<template id="praise" name="praise">
		<preconditions mode="and">
			<condition>is.zeno.request === "praise"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.variants.praise">getPraiseVariant()</assign>
			<assign is="is.zeno.behaviour">createZenoBehaviour(6.5, "Gesture_cheer", 2, "GoodJob"+is.zeno.variants.praise, 0)</assign>
		</effects>
	</template>
	
	<template id="thankYou" name="thankYou">
		<preconditions mode="and">
			<condition>is.zeno.request === "thankYou"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.variants.thankYou">getThankYouVariant()</assign>
			<assign is="is.zeno.behaviour">createZenoBehaviour(2, "", 0, "ThankYou"+is.zeno.variants.thankYou, 0)</assign>
		</effects>
	</template>
	
	<template id="wow" name="wow">
		<preconditions mode="and">
			<condition>is.zeno.request === "wow"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.variants.wow">getWowVariant()</assign>
			<assign is="is.zeno.behaviour">createZenoBehaviour(2, "", 0, "Wow"+is.zeno.variants.wow, 0)</assign>
		</effects>
	</template>
	
	<template id="newGame" name="newGame">
		<preconditions mode="and">
			<condition>is.zeno.request === "newGame"</condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.variants.newGame">getNewGameVariant()</assign>
			<assign is="is.zeno.behaviour">createZenoBehaviour(3, "", 0, "NowNewGameWithZeno"+is.zeno.variants.newGame, 0)</assign>
		</effects>
	</template>
      
	<!-- Following templates are responsible for starting behaviours, and then going back to idle when duration finishes -->
	<template id="startBehaviour" name="startBehaviour">
		<preconditions mode="and">
			<condition>is.zeno.behaviour !== ""</condition>
			<condition>is.zeno.behaviour.startTime === 0</condition>
		</preconditions>
		<effects>
			<assign is="is.logger.latestLogLine">logInfo(createZenoLogLine(is.zeno.request, is.zeno.behaviour))</assign>
			<assign is="is.zeno.busy">true</assign>
			<assign is="is.zeno.behaviour.startTime">is.behaviourplanner.time</assign>
			<assign is="is.zeno.bmlId">addBehaviourRequest(is.zeno.behaviour)</assign>
		</effects>
	</template>
	<template id="backToIdle" name="backToIdle">
		<preconditions mode="and">
			<condition>is.zeno.behaviour !== ""</condition>
			<condition><![CDATA[is.behaviourplanner.time > is.zeno.behaviour.startTime + is.zeno.behaviour.duration*1000]]></condition>
		</preconditions>
		<effects>
			<assign is="is.zeno.busy">false</assign>
			<assign is="is.zeno.behaviour">""</assign>
		</effects>
	</template>
	
	<!-- Always near the end, to remove the current request -->
    <template id="cleanupRequest" name="cleanupRequest">
    	<preconditions mode="and">
    		<condition>is.zeno.request !== ""</condition>
    	</preconditions>
    	<effects>
    		<assign is="is.zeno.request">""</assign>
    	</effects>
    </template>
</behaviourtemplates>